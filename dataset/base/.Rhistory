mutate(vabi=(as.numeric(vabi)*(x$deflator))) %>%
mutate(vabs=(as.numeric(vabs)*(x$deflator))) %>%
mutate(vabadm=(as.numeric(vabadm)*(x$deflator))) %>%
mutate(vabt=(as.numeric(vabt)*(x$deflator))) %>%
mutate(t=(as.numeric(t)*(x$deflator))) %>%
mutate(pib=(as.numeric(pib)*(x$deflator))) %>%
mutate(pib.per.capta=(as.numeric(pib.per.capta)*(x$deflator)))
rm(x,deflator)
#Categorizando a variavel semiarido
b2018 <- b2018 %>%
mutate(semiarido=if_else(semiarido=="Sim",1,0))
b2018 <- b2018[,c(1,2,35,4,5,3,6,7,8,9,10,11,12,13,14,15,
16,17,18,19,20,21,22,23,24,25,26,27,28,
29,30,31,32,33,34)]
#Incluindo estimativa populacional----
setwd("E:/igorf/Documents/GitHub/dissertacao/dataset/ibge/est_pop")
est_pop <- read_excel('POP2018_20210331.xls',sheet="Municípios",
skip = 2,col_name=c("uf","cod_uf","cod_mun","municipio","est_pop"))
View(est_pop)
est_pop <- est_pop %>%
mutate(municipio=toupper(municipio)) %>%
mutate(municipio=chartr("ÁÉÍÓÚÃÕÂÊÔÇ'-", "AEIOUAOAEOC  ",municipio)) %>%
mutate("chave"=str_c(municipio," ","(",uf,")") ) %>%
select("chave","est_pop")
b2018 <- right_join(b2018,est_pop,by="chave")
b2018 <- b2018 %>%
filter(ano!="NA")
rm(est_pop)
View(b2018)
#Criando dummy polos----
polos <- read_csv2('E:/igorf/Documents/GitHub/dissertacao/dataset/projeto_polos/polos.csv')
polos$cod_mun <- as.character(polos$cod_mun)
b2018 <- full_join(b2018, polos, by = 'cod_mun')
b2018 <- b2018 %>%
mutate(dummy1 = ifelse(is.na(polo), 0, 1)) %>%
filter(ano!="NA") %>%
select(-"amc.y",-"chave.y",-"estado",-"municipio",-"polo")
names(b2018) <- c("ano","cod_mun","amc","cod_uf","uf","regiao","semiarido","chave",
"q.dende","q.girassol","q.mamona","q.soja","h.dende",
"h.girassol","h.mamona","h.soja","v.dende","v.girassol",
"v.mamona","v.soja","s.dende","s.girassol","s.mamona",
"s.soja","d.bio","total.contratos","valores.totais",
"vaba","vabi","vabs","vabadm","vabt","t","pib",
"pib.per.capta","est_pop","polos")
b2018 <- b2018[,c(1,2,3,6,37,4,5,7,8,9,10,11,12,13,14,15,16,
17,18,19,20,21,22,23,24,25,26,27,28,29,30,
31,32,33,34,35,36)]
rm(polos)
#Exportando base----
setwd("E:/igorf/Documents/GitHub/dissertacao/dataset/base/anos/2018")
write.table(b2018,file='b2018.csv',sep=';',dec=".",na="0",quote=TRUE, row.names=FALSE)
rm(b2018)
#carregando pacotes----
if(!require(dplyr))
install.packages("dplyr")
if(!require(stringr))
install.packages("stringr")
#Limpando diretÃ³rio----
rm(list=ls())
#DiretÃ³rio local de trabalho----
setwd('E:/igorf/Documents/GitHub/dissertacao/dataset/base')
#Importando tabelas----
ano1 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2003/b2003.csv"
ano2 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2004/b2004.csv"
ano3 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2005/b2005.csv"
ano4 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2006/b2006.csv"
ano5 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2007/b2007.csv"
ano6 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2008/b2008.csv"
ano7 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2009/b2009.csv"
ano8 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2010/b2010.csv"
ano9 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2011/b2011.csv"
ano10 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2012/b2012.csv"
ano11 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2013/b2013.csv"
ano12 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2014/b2014.csv"
ano13 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2015/b2015.csv"
ano14 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2016/b2016.csv"
ano15 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2017/b2017.csv"
ano16 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2018/b2018.csv"
ano17 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2019/b2019.csv"
b2003 <- read.csv(ano1,sep=";",dec=".")
b2004 <- read.csv(ano2,sep=";",dec=".")
b2005 <- read.csv(ano3,sep=";",dec=".")
b2006 <- read.csv(ano4,sep=";",dec=".")
b2007 <- read.csv(ano5,sep=";",dec=".")
b2008 <- read.csv(ano6,sep=";",dec=".")
b2009 <- read.csv(ano7,sep=";",dec=".")
b2010 <- read.csv(ano8,sep=";",dec=".")
b2011 <- read.csv(ano9,sep=";",dec=".")
b2012 <- read.csv(ano10,sep=";",dec=".")
b2013 <- read.csv(ano11,sep=";",dec=".")
b2014 <- read.csv(ano12,sep=";",dec=".")
b2015 <- read.csv(ano13,sep=";",dec=".")
b2016 <- read.csv(ano14,sep=";",dec=".")
b2017 <- read.csv(ano15,sep=";",dec=".")
b2018 <- read.csv(ano16,sep=";",dec=".")
b2019 <- read.csv(ano17,sep=";",dec=".")
#Juntando todas as tabelas----
base <- rbind(b2003,b2004,b2005,b2006,b2007,b2008,b2009,b2010,b2011,
b2012,b2013,b2014,b2015,b2016,b2017.b2018,b2019)
rm(ano1,ano2,ano3,ano4,ano5,ano6,ano7,ano8,ano9,ano10,ano11,
ano12,ano13,ano14,ano15,b2003,b2004,b2005,b2006,b2007,b2008,
b2009,b2010,b2011,b2012,b2013,b2014,b2015,b2016,b2017,b2018,b2019)
#Criando variÃ¡veis dependentes----
base <- base %>%
mutate("prod_dende"=(base$q.dende/base$h.dende)) %>%
mutate("prod_girassol"=(base$q.girassol/base$h.girassol)) %>%
mutate("prod_mamona"=(base$q.mamona/base$h.mamona)) %>%
mutate("prod_soja"=(base$q.soja/base$h.soja)) %>%
mutate("rm_dende"=(base$v.dende/base$h.dende)) %>%
mutate("rm_girassol"=(base$v.girassol/base$h.girassol)) %>%
mutate("rm_mamona"=(base$v.mamona/base$h.mamona)) %>%
mutate("rm_soja"=(base$v.soja/base$h.soja))
base <- base %>%
mutate('prod_dende'=str_replace_all(prod_dende,'NaN','0')) %>%
mutate('prod_dende'=str_replace_all(prod_dende,'Inf','0')) %>%
mutate('prod_girassol'=str_replace_all(prod_girassol,'NaN','0')) %>%
mutate('prod_girassol'=str_replace_all(prod_girassol,'Inf','0')) %>%
mutate('prod_mamona'=str_replace_all(prod_mamona,'NaN','0')) %>%
mutate('prod_mamona'=str_replace_all(prod_mamona,'Inf','0')) %>%
mutate('prod_soja'=str_replace_all(prod_soja,'NaN','0')) %>%
mutate('prod_soja'=str_replace_all(prod_soja,'Inf','0')) %>%
mutate('rm_dende'=str_replace_all(rm_dende,'NaN','0')) %>%
mutate('rm_dende'=str_replace_all(rm_dende,'Inf','0')) %>%
mutate('rm_girassol'=str_replace_all(rm_girassol,'NaN','0')) %>%
mutate('rm_girassol'=str_replace_all(rm_girassol,'Inf','0')) %>%
mutate('rm_mamona'=str_replace_all(rm_mamona,'NaN','0')) %>%
mutate('rm_mamona'=str_replace_all(rm_mamona,'Inf','0')) %>%
mutate('rm_soja'=str_replace_all(rm_soja,'NaN','0')) %>%
mutate('rm_soja'=str_replace_all(rm_soja,'Inf','0'))
base$prod_dende <- as.numeric(base$prod_dende)
base$prod_girassol <- as.numeric(base$prod_girassol)
base$prod_mamona <- as.numeric(base$prod_mamona)
base$prod_soja <- as.numeric(base$prod_soja)
base$rm_dende <- as.numeric(base$rm_dende)
base$rm_girassol <- as.numeric(base$rm_girassol)
base$rm_mamona <- as.numeric(base$rm_mamona)
base$rm_soja <- as.numeric(base$rm_soja)
base$est_pop <- as.numeric(base$est_pop)
base <- base %>%
filter(est_pop!="NA")
#Limpando variÃ¡veis----
base <- base %>%
select(-"cod_uf",-"vabi",-"vabs",-"vabadm",-"vabt",-"amc")
#Exportando tabela----
write.table(base,file='base.csv',sep=';',dec=".",na="0",quote=TRUE, row.names=FALSE)
#carregando pacotes----
if(!require(dplyr))
install.packages("dplyr")
if(!require(stringr))
install.packages("stringr")
#Limpando diretÃ³rio----
rm(list=ls())
#DiretÃ³rio local de trabalho----
setwd('E:/igorf/Documents/GitHub/dissertacao/dataset/base')
#Importando tabelas----
ano1 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2003/b2003.csv"
ano2 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2004/b2004.csv"
ano3 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2005/b2005.csv"
ano4 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2006/b2006.csv"
ano5 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2007/b2007.csv"
ano6 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2008/b2008.csv"
ano7 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2009/b2009.csv"
ano8 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2010/b2010.csv"
ano9 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2011/b2011.csv"
ano10 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2012/b2012.csv"
ano11 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2013/b2013.csv"
ano12 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2014/b2014.csv"
ano13 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2015/b2015.csv"
ano14 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2016/b2016.csv"
ano15 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2017/b2017.csv"
ano16 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2018/b2018.csv"
ano17 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2019/b2019.csv"
b2003 <- read.csv(ano1,sep=";",dec=".")
b2004 <- read.csv(ano2,sep=";",dec=".")
b2005 <- read.csv(ano3,sep=";",dec=".")
b2006 <- read.csv(ano4,sep=";",dec=".")
b2007 <- read.csv(ano5,sep=";",dec=".")
b2008 <- read.csv(ano6,sep=";",dec=".")
b2009 <- read.csv(ano7,sep=";",dec=".")
b2010 <- read.csv(ano8,sep=";",dec=".")
b2011 <- read.csv(ano9,sep=";",dec=".")
b2012 <- read.csv(ano10,sep=";",dec=".")
b2013 <- read.csv(ano11,sep=";",dec=".")
b2014 <- read.csv(ano12,sep=";",dec=".")
b2015 <- read.csv(ano13,sep=";",dec=".")
b2016 <- read.csv(ano14,sep=";",dec=".")
b2017 <- read.csv(ano15,sep=";",dec=".")
b2018 <- read.csv(ano16,sep=";",dec=".")
b2019 <- read.csv(ano17,sep=";",dec=".")
#Juntando todas as tabelas----
base <- rbind(b2003,b2004,b2005,b2006,b2007,b2008,b2009,b2010,b2011,
b2012,b2013,b2014,b2015,b2016,b2017.b2018,b2019)
#Juntando todas as tabelas----
base <- rbind(b2003,b2004,b2005,b2006,b2007,b2008,b2009,b2010,b2011,
b2012,b2013,b2014,b2015,b2016,b2017,b2018,b2019)
rm(ano1,ano2,ano3,ano4,ano5,ano6,ano7,ano8,ano9,ano10,ano11,ano12,
ano13,ano14,ano15,ano16,ano17,b2003,b2004,b2005,b2006,b2007,b2008,
b2009,b2010,b2011,b2012,b2013,b2014,b2015,b2016,b2017,b2018,b2019)
#Criando variÃ¡veis dependentes----
base <- base %>%
mutate("prod_dende"=(base$q.dende/base$h.dende)) %>%
mutate("prod_girassol"=(base$q.girassol/base$h.girassol)) %>%
mutate("prod_mamona"=(base$q.mamona/base$h.mamona)) %>%
mutate("prod_soja"=(base$q.soja/base$h.soja)) %>%
mutate("rm_dende"=(base$v.dende/base$h.dende)) %>%
mutate("rm_girassol"=(base$v.girassol/base$h.girassol)) %>%
mutate("rm_mamona"=(base$v.mamona/base$h.mamona)) %>%
mutate("rm_soja"=(base$v.soja/base$h.soja))
base <- base %>%
mutate('prod_dende'=str_replace_all(prod_dende,'NaN','0')) %>%
mutate('prod_dende'=str_replace_all(prod_dende,'Inf','0')) %>%
mutate('prod_girassol'=str_replace_all(prod_girassol,'NaN','0')) %>%
mutate('prod_girassol'=str_replace_all(prod_girassol,'Inf','0')) %>%
mutate('prod_mamona'=str_replace_all(prod_mamona,'NaN','0')) %>%
mutate('prod_mamona'=str_replace_all(prod_mamona,'Inf','0')) %>%
mutate('prod_soja'=str_replace_all(prod_soja,'NaN','0')) %>%
mutate('prod_soja'=str_replace_all(prod_soja,'Inf','0')) %>%
mutate('rm_dende'=str_replace_all(rm_dende,'NaN','0')) %>%
mutate('rm_dende'=str_replace_all(rm_dende,'Inf','0')) %>%
mutate('rm_girassol'=str_replace_all(rm_girassol,'NaN','0')) %>%
mutate('rm_girassol'=str_replace_all(rm_girassol,'Inf','0')) %>%
mutate('rm_mamona'=str_replace_all(rm_mamona,'NaN','0')) %>%
mutate('rm_mamona'=str_replace_all(rm_mamona,'Inf','0')) %>%
mutate('rm_soja'=str_replace_all(rm_soja,'NaN','0')) %>%
mutate('rm_soja'=str_replace_all(rm_soja,'Inf','0'))
base$prod_dende <- as.numeric(base$prod_dende)
base$prod_girassol <- as.numeric(base$prod_girassol)
base$prod_mamona <- as.numeric(base$prod_mamona)
base$prod_soja <- as.numeric(base$prod_soja)
base$rm_dende <- as.numeric(base$rm_dende)
base$rm_girassol <- as.numeric(base$rm_girassol)
base$rm_mamona <- as.numeric(base$rm_mamona)
base$rm_soja <- as.numeric(base$rm_soja)
base$est_pop <- as.numeric(base$est_pop)
base <- base %>%
filter(est_pop!="NA")
#Limpando variÃ¡veis----
base <- base %>%
select(-"cod_uf",-"vabi",-"vabs",-"vabadm",-"vabt",-"amc")
#Exportando tabela----
write.table(base,file='base.csv',sep=';',dec=".",na="0",quote=TRUE, row.names=FALSE)
rm(base)
#Notas SIDRA IBGE (PAM)
#5-Os produtos girassol e triticale só apresentam informação a partir de 2005.
#12-Valor da produção: variável derivada calculada pela média ponderada das
#informações de quantidade e preço médio corrente pago ao produtor, de acordo
#com os períodos de colheita e comercialização de cada produto. As despesas de
#frete e impostos não são incluídas no preço.
# Importando pacotes para trabalho----
if(!require(cobalt))
install.packages('cobalt')
if(!require(dplyr))
install.packages("dplyr")
if(!require(ggplot2))
install.packages("ggplot2")
if(!require(lmtest))
install.packages('lmtest')
if(!require(MatchIt))
install.packages("MatchIt")
if(!require(rstatix))
install.packages('rstatix')
if(!require(stargazer))
install.packages("stargazer")
# Limpando memória----
rm(list=ls())
# Importando base de dados----
base <- 'https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/base.csv'
pnpb <- read.csv(base,sep=';',dec='.')
rm(base)
# Criando dummy para regiao----
pnpb <- pnpb %>%
mutate(norte=if_else(regiao=='Norte',1,0))
pnpb <- pnpb %>%
mutate(nordeste=if_else(regiao=='Nordeste',1,0))
pnpb <- pnpb %>%
mutate(sul=if_else(regiao=='Sul',1,0))
pnpb <- pnpb %>%
mutate(sudeste=if_else(regiao=='Sudeste',1,0))
pnpb <- pnpb %>%
mutate(coeste=if_else(regiao=='Centro-oeste',1,0))
# Comparação entre as médias dos polos antes do pareamento----
# Produtividade (quantidade (ton) / área plantada (hec))
# Dendê (Cacho de coco)
pnpb %>%
group_by(polos) %>%
summarise(n_municipios=n(),
mean_match = mean(prod_dende),
std_error = sd(prod_dende) / sqrt(n_municipios))
# Girassol(em grão)
pnpb %>%
group_by(polos) %>%
summarise(n_municipios=n(),
mean_match = mean(prod_girassol),
std_error = sd(prod_girassol) / sqrt(n_municipios))
# Mamona (baga)
pnpb %>%
group_by(polos) %>%
summarise(n_municipios=n(),
mean_match = mean(prod_mamona),
std_error = sd(prod_mamona) / sqrt(n_municipios))
# Soja (em grão)
pnpb %>%
group_by(polos) %>%
summarise(n_municipios=n(),
mean_match = mean(prod_soja),
std_error = sd(prod_soja) / sqrt(n_municipios))
# Renda média (Valor da produção (R$) / area plantada (ha))
# Dendê (Cacho de coco)
pnpb %>%
group_by(polos) %>%
summarise(n_municipios=n(),
mean_match = mean(rm_dende),
std_error = sd(rm_dende) / sqrt(n_municipios))
# Girassol(em grão)
pnpb %>%
group_by(polos) %>%
summarise(n_municipios=n(),
mean_match = mean(rm_girassol),
std_error = sd(rm_girassol) / sqrt(n_municipios))
# Mamona (baga)
pnpb %>%
group_by(polos) %>%
summarise(n_municipios=n(),
mean_match = mean(rm_mamona),
std_error = sd(rm_mamona) / sqrt(n_municipios))
# Soja (em grão)
pnpb %>%
group_by(polos) %>%
summarise(n_municipios=n(),
mean_match = mean(rm_soja),
std_error = sd(rm_soja) / sqrt(n_municipios))
# Análise descritiva dados----
# Média da Área plantada por cultura
area.dende <- pnpb %>% group_by(polos) %>%
summarise(média = mean(h.dende),
desvio_padrao = sd(h.dende),
mediana = median(h.dende))
area.girassol <- pnpb %>% group_by(polos) %>%
summarise(média = mean(h.girassol),
desvio_padrao = sd(h.girassol),
mediana = median(h.girassol))
area.mamona <- pnpb %>% group_by(polos) %>%
summarise(média = mean(h.mamona),
desvio_padrao = sd(h.mamona),
mediana = median(h.mamona))
area.soja <- pnpb %>% group_by(polos) %>%
summarise(média = mean(h.soja),
desvio_padrao = sd(h.soja),
mediana = median(h.soja))
# Média da Quantidade produzida por cultura
quant.dende <- pnpb %>% group_by(polos) %>%
summarise(média = mean(q.dende),
desvio_padrao = sd(q.dende),
mediana = median(q.dende))
quant.girassol <- pnpb %>% group_by(polos) %>%
summarise(média = mean(q.girassol),
desvio_padrao = sd(q.girassol),
mediana = median(q.girassol))
quant.mamona <- pnpb %>% group_by(polos) %>%
summarise(média = mean(q.mamona),
desvio_padrao = sd(q.mamona),
mediana = median(q.mamona))
quant.soja <- pnpb %>% group_by(polos) %>%
summarise(média = mean(q.soja),
desvio_padrao = sd(q.soja),
mediana = median(q.soja))
# Valor Médio da Produção por cultura
valor.dende <- pnpb %>% group_by(polos) %>%
summarise(média = mean(v.dende),
desvio_padrao = sd(v.dende),
mediana = median(v.dende))
valor.girassol <- pnpb %>% group_by(polos) %>%
summarise(média = mean(v.girassol),
desvio_padrao = sd(v.girassol),
mediana = median(v.girassol))
valor.mamona <- pnpb %>% group_by(polos) %>%
summarise(média = mean(v.mamona),
desvio_padrao = sd(v.mamona),
mediana = median(v.mamona))
valor.soja <- pnpb %>% group_by(polos) %>%
summarise(média = mean(v.soja),
desvio_padrao = sd(v.soja),
mediana = median(v.soja))
rm(area.dende,area.girassol,area.mamona,area.soja,
quant.dende,quant.girassol,quant.mamona,quant.soja,
valor.dende,valor.girassol,valor.mamona,valor.soja)
# Análise descritiva variáveis dependentes----
frota <- pnpb %>% group_by(polos) %>%
summarise(média = mean(d.bio),
desvio_padrao = sd(d.bio),
mediana = median(d.bio))
contratos <- pnpb %>% group_by(polos) %>%
summarise(média = mean(total.contratos),
desvio_padrao = sd(total.contratos),
mediana = median(total.contratos))
valor.contratos <- pnpb %>% group_by(polos) %>%
summarise(média = mean(valores.totais),
desvio_padrao = sd(valores.totais),
mediana = median(valores.totais))
pibpcapta <- pnpb %>% group_by(polos) %>%
summarise(média = mean(pib.per.capta),
desvio_padrao = sd(pib.per.capta),
mediana = median(pib.per.capta))
valoradc <- pnpb %>% group_by(polos) %>%
summarise(média = mean(vaba),
desvio_padrao = sd(vaba),
mediana = median(vaba))
populacao <- pnpb %>% group_by(polos) %>%
summarise(média = mean(est_pop),
desvio_padrao = sd(est_pop),
mediana = median(est_pop))
rm(pibpcapta,contratos,frota,populacao,valor.contratos,
valoradc)
# Distribuição da produção total por região em toneladas----
distr <- pnpb %>% group_by(regiao) %>%
summarise(total = sum(q.soja,q.dende,q.girassol,q.mamona))
rm(distr)
# Teste t para verificar se as médias entre os grupos são iguais----
# H0: p-valor > 0.05 médias são estatíticamente iguais
#Produtividade
with(pnpb,t.test(prod_dende ~ polos)) # significativo
with(pnpb,t.test(prod_girassol ~ polos)) # significativo
with(pnpb,t.test(prod_mamona ~ polos)) # significativo
with(pnpb,t.test(prod_soja ~ polos)) # significativo
#Renda média
with(pnpb,t.test(rm_dende ~ polos)) # significativo
with(pnpb,t.test(rm_girassol ~ polos)) # significativo
with(pnpb,t.test(rm_mamona ~ polos)) # significativo
with(pnpb,t.test(rm_soja ~ polos)) # significativo
# Teste de MANN-WHITNEY----
# H0: p-valor > 0.05 médias são estatisticamente iguais
# Dendê
wilcox.test(prod_dende ~ polos, data=pnpb)
wilcox.test(rm_dende ~ polos, data=pnpb)
# Girassol
wilcox.test(prod_girassol ~ polos, data=pnpb)
wilcox.test(rm_girassol ~ polos, data=pnpb)
# Mamona
wilcox.test(prod_mamona ~ polos, data=pnpb)
wilcox.test(rm_mamona ~ polos, data=pnpb)
# Soja
wilcox.test(prod_soja ~ polos, data=pnpb)
wilcox.test(rm_soja ~ polos, data=pnpb)
# Resumo estatístico das variáveis de interesse----
pnpb %>% group_by(polos) %>%
get_summary_stats(prod_dende,prod_girassol,prod_mamona,prod_soja,
type='mean_sd')
pnpb %>% group_by(polos) %>%
get_summary_stats(rm_dende,rm_girassol,rm_mamona,rm_soja,
type='mean_sd')
# Diferença entre médias: variáveis de pré-tratamento----
pnpb_cov <- c('total.contratos','valores.totais','d.bio','vaba','pib.per.capta')
pnpb %>%
group_by(polos) %>%
select(one_of(pnpb_cov)) %>%
summarise_all(funs(mean(.,na.rm=TRUE)))
lapply(pnpb_cov,function(v) {
t.test(pnpb[,v] ~ pnpb[,'polos'])
})
m_ps <- glm(polos ~ total.contratos + valores.totais + d.bio +
vaba + pib.per.capta,family=binomial(),data=pnpb)
summary(m_ps)
stargazer(m_ps,type='text',omit.stat=c('LL','ser','f'),
dep.var.labels=c('Tratamento'),out='modbin.html')
# Calculando as probabilidades preditas de participar do projeto polos----
prs_df <- data.frame(pr_score=predict(m_ps, type='response'),
polos=m_ps$model$polos)
head(prs_df)
# Representação gráfica das probabilidades preditas de participar do projeto polos----
labs <- paste(c('Municípios Polos','Municípios Não Polos'))
prs_df %>%
mutate(polos=ifelse(polos==1,labs[1],labs[2]
)) %>%
ggplot(aes(x=pr_score)) + geom_histogram(color='white') +
facet_wrap(~polos) + xlab('Probabilidade escore') +
ylab('Número de Municípios') +
theme_bw()
# Iniciando matching----
matching <- matchit(polos ~ total.contratos + valores.totais + d.bio +
vaba + pib.per.capta,data=pnpb,method='nearest',
ratio=1)
summary(matching)
# Sobreposição da densidade da amostra antes e após o pareamento----
bal.plot(matching,var.name='distance',which='both',position='bottom',
sample.names=c('(a) antes','(b) depois'),
colors =c('white','black')) +
labs(title=NULL,x='Distância',
y='Densidade',fill=NULL)
# Balanceamento da amostra antes e após o pareamento----
bal.plot(matching,type='histogram', mirror=TRUE,which = 'both',
sample.names=c('(a) antes','(b) depois'),position='bottom',
colors =c('white','black')) +
labs(title=NULL,x='Distância', y='Proporção',fill=NULL)
# Declarando nova base após o pareamento----
psm <- match.data(matching)
head(psm)
dim(psm)
# Verificando as médias das covariadas após o pareamento----
psm %>%
group_by(polos) %>%
select(one_of(pnpb_cov)) %>%
summarise_all(funs(mean))
lapply(pnpb_cov,function(v) {
t.test(psm[,v] ~ psm$polos)
})
rm(m_ps,matching,prs_df,labs,pnpb_cov)
# Salvando nova base----
setwd('E:/igorf/Documents/GitHub/dissertacao/dataset/base')
write.table(psm,file='psm.csv',sep=';',dec='.',na='',quote=TRUE, row.names=FALSE)
View(psm)
rm(list=ls())
quit()
