mutate('prod_girassol'=str_replace_all(prod_girassol,'NaN','0')) %>%
mutate('prod_girassol'=str_replace_all(prod_girassol,'Inf','0')) %>%
mutate('prod_mamona'=str_replace_all(prod_mamona,'NaN','0')) %>%
mutate('prod_mamona'=str_replace_all(prod_mamona,'Inf','0')) %>%
mutate('prod_soja'=str_replace_all(prod_soja,'NaN','0')) %>%
mutate('prod_soja'=str_replace_all(prod_soja,'Inf','0')) %>%
mutate('rm_dende'=str_replace_all(rm_dende,'NaN','0')) %>%
mutate('rm_dende'=str_replace_all(rm_dende,'Inf','0')) %>%
mutate('rm_girassol'=str_replace_all(rm_girassol,'NaN','0')) %>%
mutate('rm_girassol'=str_replace_all(rm_girassol,'Inf','0')) %>%
mutate('rm_mamona'=str_replace_all(rm_mamona,'NaN','0')) %>%
mutate('rm_mamona'=str_replace_all(rm_mamona,'Inf','0')) %>%
mutate('rm_soja'=str_replace_all(rm_soja,'NaN','0')) %>%
mutate('rm_soja'=str_replace_all(rm_soja,'Inf','0'))
base$prod_dende <- as.numeric(base$prod_dende)
base$prod_girassol <- as.numeric(base$prod_girassol)
base$prod_mamona <- as.numeric(base$prod_mamona)
base$prod_soja <- as.numeric(base$prod_soja)
base$rm_dende <- as.numeric(base$rm_dende)
base$rm_girassol <- as.numeric(base$rm_girassol)
base$rm_mamona <- as.numeric(base$rm_mamona)
base$rm_soja <- as.numeric(base$rm_soja)
base$est_pop <- as.numeric(base$est_pop)
base <- base %>%
filter(est_pop!="NA")
#Limpando variáveis----
base <- base %>%
select(-"cod_uf",-"vabi",-"vabs",-"vabadm",-"vabt",-"amc")
pnpb <- base
rm(base)
pnpb %>%
group_by(polos) %>%
summarise(n_municipios=n(),
mean_match = mean(prod_dende),
std_error = sd(prod_dende) / sqrt(n_municipios))
View(pnpb)
# Resumo estatístico das variáveis de interesse----
pnpb %>% group_by(polos) %>%
get_summary_stats(prod_dende,prod_girassol,prod_mamona,prod_soja,
type='mean_sd')
pnpb %>% group_by(polos) %>%
get_summary_stats(rm_dende,rm_girassol,rm_mamona,rm_soja,
type='mean_sd')
pnpb %>% group_by(polos) %>%
get_summary_stats(s.dende,s.girassol,s.mamona,s.soja,
type='mean_sd')
View(pnpb)
View(pnpb)
pnpb %>% group_by(polos, uf) %>%
summarise(média = mean(prod_soja),
desvio_padrao = sd(prod_soja),
mediana = median(prod_soja))
tb_prod_soja <- pnpb %>% group_by(polos, uf) %>%
summarise(média = mean(prod_soja),
desvio_padrao = sd(prod_soja),
mediana = median(prod_soja))
View(tb_prod_soja)
tb_prod_soja <- pnpb %>% group_by(polos, uf) %>%
summarise(média = mean(q.soja),
desvio_padrao = sd(q.soja),
mediana = median(q.soja))
View(tb_prod_soja)
tb_prod_soja <- pnpb %>% group_by(polos, uf) %>%
summarise(média = mean(h.soja),
desvio_padrao = sd(h.soja),
mediana = median(h.soja))
View(tb_prod_soja)
tb_prod_soja <- pnpb %>% group_by(polos, uf) %>%
summarise(média = mean(v.soja),
desvio_padrao = sd(v.soja),
mediana = median(v.soja))
View(tb_prod_soja)
View(pnpb)
psm <- psm %>%
mutate(norte=if_else(uf==c('AM','PA','AC','RO','RR','AP','TO'),1,0))
pnpb <- pnpb %>%
mutate(norte=if_else(uf==c('AM','PA','AC','RO','RR','AP','TO'),1,0))
pnpb <- pnpb %>%
mutate(norte=if_else(uf=='AM',1,0))
View(pnpb)
pnpb <- pnpb %>%
mutate(norte=if_else(uf=='AM',1,0)) %>%
mutate(norte=if_else(uf=='PA',1,0))
pnpb <- pnpb %>%
mutate(norte=if_else(uf=='AM',1,0)) %>%
mutate(norte=if_else(uf=='PA',1,0)) %>%
mutate(norte=if_else(uf=='AC',1,0)) %>%
mutate(norte=if_else(uf=='RO',1,0)) %>%
mutate(norte=if_else(uf=='RR',1,0)) %>%
mutate(norte=if_else(uf=='AP',1,0)) %>%
mutate(norte=if_else(uf=='TO',1,0))
table(pnpb$polos,pnpb$norte)
tb_prod_soja <- pnpb %>% group_by(polos, norte) %>%
summarise(média = mean(v.soja),
desvio_padrao = sd(v.soja),
mediana = median(v.soja))
View(tb_prod_soja)
table(pnpb$uf,pnpb$norte)
View(pnpb)
table(pnpb$uf)
table(pnpb$norte)
tb_prod_soja <- pnpb %>% group_by(polos, norte) %>%
summarise(média = mean(v.mamona),
desvio_padrao = sd(v.mamona),
mediana = median(v.mamona))
View(tb_prod_soja)
pnpb <- pnpb %>%
mutate(nordeste=if_else(uf=='MA',1,0)) %>%
mutate(nordeste=if_else(uf=='PI',1,0)) %>%
mutate(nordeste=if_else(uf=='CE',1,0)) %>%
mutate(nordeste=if_else(uf=='RN',1,0)) %>%
mutate(nordeste=if_else(uf=='PE',1,0)) %>%
mutate(nordeste=if_else(uf=='PB',1,0)) %>%
mutate(nordeste=if_else(uf=='SE',1,0)) %>%
mutate(nordeste=if_else(uf=='AL',1,0))
pnpb <- pnpb %>%
mutate(coeste=if_else(uf=='GO',1,0)) %>%
mutate(coeste=if_else(uf=='MT',1,0)) %>%
mutate(coeste=if_else(uf=='DF',1,0)) %>%
mutate(coeste=if_else(uf=='MS',1,0))
View(pnpb)
View(pnpb)
rm(tb_prod_soja)
View(pnpb)
pnpb <- pnpb %>%
mutate(norte=if_else(uf==filter(c('AM','PA','AC','RO','RR','AP','TO'),1,0)))
View(pnpb)
rm(list=ls())
#Importando tabelas----
ano1 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2003/b2003.csv"
ano2 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2004/b2004.csv"
ano3 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2005/b2005.csv"
ano4 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2006/b2006.csv"
ano5 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2007/b2007.csv"
ano6 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2008/b2008.csv"
ano7 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2009/b2009.csv"
ano8 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2010/b2010.csv"
ano9 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2011/b2011.csv"
ano10 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2012/b2012.csv"
ano11 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2013/b2013.csv"
ano12 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2014/b2014.csv"
ano13 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2015/b2015.csv"
ano14 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2016/b2016.csv"
ano15 <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2017/b2017.csv"
b2003 <- read.csv(ano1,sep=";",dec=".")
b2004 <- read.csv(ano2,sep=";",dec=".")
b2005 <- read.csv(ano3,sep=";",dec=".")
b2006 <- read.csv(ano4,sep=";",dec=".")
b2007 <- read.csv(ano5,sep=";",dec=".")
b2008 <- read.csv(ano6,sep=";",dec=".")
b2009 <- read.csv(ano7,sep=";",dec=".")
b2010 <- read.csv(ano8,sep=";",dec=".")
b2011 <- read.csv(ano9,sep=";",dec=".")
b2012 <- read.csv(ano10,sep=";",dec=".")
b2013 <- read.csv(ano11,sep=";",dec=".")
b2014 <- read.csv(ano12,sep=";",dec=".")
b2015 <- read.csv(ano13,sep=";",dec=".")
b2016 <- read.csv(ano14,sep=";",dec=".")
b2017 <- read.csv(ano15,sep=";",dec=".")
#Juntando todas as tabelas----
base <- rbind(b2003,b2004,b2005,b2006,b2007,b2008,b2009,b2010,b2011,
b2012,b2013,b2014,b2015,b2016,b2017)
rm(ano1,ano2,ano3,ano4,ano5,ano6,ano7,ano8,ano9,ano10,ano11,
ano12,ano13,ano14,ano15,b2003,b2004,b2005,b2006,b2007,b2008,
b2009,b2010,b2011,b2012,b2013,b2014,b2015,b2016,b2017)
#Criando variáveis dependentes----
base <- base %>%
mutate("prod_dende"=(base$q.dende/base$h.dende)) %>%
mutate("prod_girassol"=(base$q.girassol/base$h.girassol)) %>%
mutate("prod_mamona"=(base$q.mamona/base$h.mamona)) %>%
mutate("prod_soja"=(base$q.soja/base$h.soja)) %>%
mutate("rm_dende"=(base$v.dende/base$h.dende)) %>%
mutate("rm_girassol"=(base$v.girassol/base$h.girassol)) %>%
mutate("rm_mamona"=(base$v.mamona/base$h.mamona)) %>%
mutate("rm_soja"=(base$v.soja/base$h.soja))
base <- base %>%
mutate('prod_dende'=str_replace_all(prod_dende,'NaN','0')) %>%
mutate('prod_dende'=str_replace_all(prod_dende,'Inf','0')) %>%
mutate('prod_girassol'=str_replace_all(prod_girassol,'NaN','0')) %>%
mutate('prod_girassol'=str_replace_all(prod_girassol,'Inf','0')) %>%
mutate('prod_mamona'=str_replace_all(prod_mamona,'NaN','0')) %>%
mutate('prod_mamona'=str_replace_all(prod_mamona,'Inf','0')) %>%
mutate('prod_soja'=str_replace_all(prod_soja,'NaN','0')) %>%
mutate('prod_soja'=str_replace_all(prod_soja,'Inf','0')) %>%
mutate('rm_dende'=str_replace_all(rm_dende,'NaN','0')) %>%
mutate('rm_dende'=str_replace_all(rm_dende,'Inf','0')) %>%
mutate('rm_girassol'=str_replace_all(rm_girassol,'NaN','0')) %>%
mutate('rm_girassol'=str_replace_all(rm_girassol,'Inf','0')) %>%
mutate('rm_mamona'=str_replace_all(rm_mamona,'NaN','0')) %>%
mutate('rm_mamona'=str_replace_all(rm_mamona,'Inf','0')) %>%
mutate('rm_soja'=str_replace_all(rm_soja,'NaN','0')) %>%
mutate('rm_soja'=str_replace_all(rm_soja,'Inf','0'))
base$prod_dende <- as.numeric(base$prod_dende)
base$prod_girassol <- as.numeric(base$prod_girassol)
base$prod_mamona <- as.numeric(base$prod_mamona)
base$prod_soja <- as.numeric(base$prod_soja)
base$rm_dende <- as.numeric(base$rm_dende)
base$rm_girassol <- as.numeric(base$rm_girassol)
base$rm_mamona <- as.numeric(base$rm_mamona)
base$rm_soja <- as.numeric(base$rm_soja)
base$est_pop <- as.numeric(base$est_pop)
base <- base %>%
filter(est_pop!="NA")
#Limpando variáveis----
base <- base %>%
select(-"cod_uf",-"vabi",-"vabs",-"vabadm",-"vabt",-"amc")
View(base)
#Pacotes a serem utilizados----
if(!require(dplyr))
install.packages("dplyr")
if(!require(stringr))
install.packages("stringr")
if(!require(readxl))
install.packages("readxl")
#Limpando bases da memória----
rm(list=ls())
#Diretório local de trabalho----
setwd("E:/igorf/Documents/GitHub/dissertacao/dataset/ibge/pib municipal")
#Carregando e organizando tabelas----
df1 <- read_excel("~/GitHub/dissertacao/dataset/ibge/pib municipal/pib 2002 2009.xls")
df2 <- read_excel("~/GitHub/dissertacao/dataset/ibge/pib municipal/pib 2010 2017.xls")
df1 <- df1 %>%
select("Ano","Nome da Grande Região","Código da Unidade da Federação","Sigla da Unidade da Federação",
"Nome da Unidade da Federação","Código do Município","Nome do Município",
"Semiárido","Valor adicionado bruto da Agropecuária, \na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto da Indústria,\na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto dos Serviços,\na preços correntes \n- exceto Administração, defesa, educação e saúde públicas e seguridade social\n(R$ 1.000)",
"Valor adicionado bruto da Administração, defesa, educação e saúde públicas e seguridade social, \na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto total, \na preços correntes\n(R$ 1.000)","Impostos, líquidos de subsídios, sobre produtos, \na preços correntes\n(R$ 1.000)",
"Produto Interno Bruto, \na preços correntes\n(R$ 1.000)","Produto Interno Bruto per capita, \na preços correntes\n(R$ 1,00)")
df2 <- df2 %>%
select("Ano","Nome da Grande Região","Código da Unidade da Federação","Sigla da Unidade da Federação",
"Nome da Unidade da Federação","Código do Município","Nome do Município",
"Semiárido","Valor adicionado bruto da Agropecuária, \na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto da Indústria,\na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto dos Serviços,\na preços correntes \n- exceto Administração, defesa, educação e saúde públicas e seguridade social\n(R$ 1.000)",
"Valor adicionado bruto da Administração, defesa, educação e saúde públicas e seguridade social, \na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto total, \na preços correntes\n(R$ 1.000)","Impostos, líquidos de subsídios, sobre produtos, \na preços correntes\n(R$ 1.000)",
"Produto Interno Bruto, \na preços correntes\n(R$ 1.000)","Produto Interno Bruto per capita, \na preços correntes\n(R$ 1,00)")
pibmun <- rbind(df1,df2)
rm(df1,df2)
names(pibmun) <- c("ano","cod_uf","uf","estado","cod_mun","municipio",
"semiarido","vaba","vabi","vabs","vabadm","vabt",
"t","pib","pib_percapta")
pibmun <- pibmun %>%
mutate("estado"=toupper(estado)) %>%
mutate("municipio"=toupper(municipio)) %>%
mutate("municipio"=chartr("ÁÉÍÓÚÃÕÂÊÔÇ'-", "AEIOUAOAEOC  ",municipio)) %>%
mutate("chave"=str_c(municipio," ","(", uf, ")")) %>%
filter(ano!=2002)
pibmun <- pibmun[,c(1,16,2,3,4,5,6,7,8,9,10,11,12,13,14,15)]
#Destino tabela----
setwd("E:/igorf/Documents/GitHub/dissertacao/dataset/base")
#Carregando e organizando tabelas----
df1 <- read_excel("~/GitHub/dissertacao/dataset/ibge/pib municipal/pib 2002 2009.xls")
df2 <- read_excel("~/GitHub/dissertacao/dataset/ibge/pib municipal/pib 2010 2017.xls")
#Diretório local de trabalho----
setwd("E:/igorf/Documents/GitHub/dissertacao/dataset/ibge/pib municipal")
#Carregando e organizando tabelas----
df1 <- read_excel("E:/igorf/Documents/GitHub/dissertacao/dataset/ibge/pib municipal/pib 2002 2009.xls")
df2 <- read_excel("E:/igorf/Documents/GitHub/dissertacao/dataset/ibge/pib municipal/pib 2010 2017.xls")
df1 <- df1 %>%
select("Ano","Nome da Grande Região","Código da Unidade da Federação","Sigla da Unidade da Federação",
"Nome da Unidade da Federação","Código do Município","Nome do Município",
"Semiárido","Valor adicionado bruto da Agropecuária, \na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto da Indústria,\na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto dos Serviços,\na preços correntes \n- exceto Administração, defesa, educação e saúde públicas e seguridade social\n(R$ 1.000)",
"Valor adicionado bruto da Administração, defesa, educação e saúde públicas e seguridade social, \na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto total, \na preços correntes\n(R$ 1.000)","Impostos, líquidos de subsídios, sobre produtos, \na preços correntes\n(R$ 1.000)",
"Produto Interno Bruto, \na preços correntes\n(R$ 1.000)","Produto Interno Bruto per capita, \na preços correntes\n(R$ 1,00)")
df2 <- df2 %>%
select("Ano","Nome da Grande Região","Código da Unidade da Federação","Sigla da Unidade da Federação",
"Nome da Unidade da Federação","Código do Município","Nome do Município",
"Semiárido","Valor adicionado bruto da Agropecuária, \na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto da Indústria,\na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto dos Serviços,\na preços correntes \n- exceto Administração, defesa, educação e saúde públicas e seguridade social\n(R$ 1.000)",
"Valor adicionado bruto da Administração, defesa, educação e saúde públicas e seguridade social, \na preços correntes\n(R$ 1.000)",
"Valor adicionado bruto total, \na preços correntes\n(R$ 1.000)","Impostos, líquidos de subsídios, sobre produtos, \na preços correntes\n(R$ 1.000)",
"Produto Interno Bruto, \na preços correntes\n(R$ 1.000)","Produto Interno Bruto per capita, \na preços correntes\n(R$ 1,00)")
pibmun <- rbind(df1,df2)
rm(df1,df2)
View(pibmun)
View(pibmun)
names(pibmun) <- c("ano","regiao","cod_uf","uf","estado","cod_mun","municipio",
"semiarido","vaba","vabi","vabs","vabadm","vabt",
"t","pib","pib_percapta")
View(pibmun)
View(pibmun)
pibmun <- pibmun %>%
mutate("estado"=toupper(estado)) %>%
mutate("municipio"=toupper(municipio)) %>%
mutate("municipio"=chartr("ÁÉÍÓÚÃÕÂÊÔÇ'-", "AEIOUAOAEOC  ",municipio)) %>%
mutate("chave"=str_c(municipio," ","(", uf, ")")) %>%
filter(ano!=2002)
View(pibmun)
View(pibmun)
pibmun <- pibmun[,c(1,17,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)]
View(pibmun)
#Destino tabela----
setwd("E:/igorf/Documents/GitHub/dissertacao/dataset/base")
#Exportando tabela----
write.table(pibmun,file='pibmun.csv',sep=';',dec=".",na="",quote=TRUE, row.names=FALSE)
View(pibmun)
#Carregando pacotes----
if(!require(dplyr))
install.packages("dplyr")
if(!require(stringr))
install.packages("stringr")
if(!require(readxl))
install.packages("readxl")
if(!require(tidyverse))
install.packages("tidyverse")
#Limpando memória----
rm(list=ls())
install.packages("tidyverse")
#Diretório local de trabalho----
setwd("E:/igorf/Documents/GitHub/dissertacao/dataset/base/anos/2003")
#Importando tabelas----
qprod <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2003/quantidade_produzida.csv"
hprod <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2003/area_plantada.csv"
vprod <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2003/valor_producao.csv"
demanda <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2003/demanda.csv"
contratos <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2003/bacen.csv"
salarios <- "https://raw.githubusercontent.com/igorfdeoliv/dissertacao/main/dataset/base/anos/2003/rais.csv"
#Gerando e juntando tabelas de quantidade e area
qprod <- read.csv(qprod,sep=";",dec=".")
hprod <- read.csv(hprod,sep=";",dec=".")
df1 <- right_join(qprod,hprod,by='Cód.')
names(df1) <- c("ano","cod_mun","Município","q_dende","q_girassol",
"q_mamona","q_soja","drop1","drop2","h_dende",
"h_girassol","h_mamona","h_soja")
df1 <- df1 %>%
select(-"drop1",-"drop2")
rm(qprod,hprod)
vprod <- read.csv(vprod,sep=";",dec=".")
df2 <- right_join(df1,vprod,by="Município")
names(df2) <- c("ano","cod_mun","chave","q_dende","q_girassol",
"q_mamonoa","q_soja","h_dende","h_girassol",
"h_mamona","h_soja","drop1","drop2","v_dende",
"v_girassol","v_mamona","v_soja")
df2 <- df2 %>%
select(-"drop1",-"drop2")
rm(vprod)
#Gerando e juntando a tabela de salarios ao df anterior
salarios <- read.csv(salarios,sep=";",dec=".")
df3 <- right_join(df2,salarios,by="chave")
df3 <- df3 %>%
filter(cod_mun!="NA")
names(df3) <- c("ano","cod_mun","chave","q_dende","q_girassol",
"q_mamona","q_soja","h_dende","h_girassol",
"h_mamona","h_soja","v_dende","v_girassol",
"v_mamona","v_soja","drop1","drop2","drop3",
"drop4","dende1","dende2","girassol1","girassol2",
"mamona1","mamona2","soja1","soja2","drop5")
df3 <- df3 %>%
mutate("s_dende"=(df3$dende1+df3$dende2)) %>%
mutate("s_girassol"=(df3$girassol1+df3$girassol2)) %>%
mutate("s_mamona"=(df3$mamona1+df3$mamona2)) %>%
mutate("s_soja"=(df3$soja1+df3$soja2)) %>%
select(-"drop1",-"drop2",-"drop3",-"drop4",-"drop5",
-"dende1",-"dende2",-"girassol1",-"girassol2",
-"mamona1",-"mamona2",-"soja1",-"soja2")
rm(salarios)
#Gerando e juntando tabela de demanda ao df anterior
demanda <- read.csv(demanda,sep=";",dec=".")
df4 <- right_join(df3,demanda,by="chave")
df4 <- df4 %>%
filter(cod_mun!="NA")
names(df4) <- c("ano","cod_mun","chave","q_dende","q_girassol",
"q_mamona","q_soja","h_dende","h_girassol","h_mamona",
"h_soja","v_dende","v_girassol","v_mamona","v_soja",
"s_dende","s_girassol","s_mamona","s_soja","drop1",
"drop2","drop3","drop4","drop5","drop6","demanda_bio")
df4 <- df4 %>%
select(-"drop1",-"drop2",-"drop3",-"drop4",-"drop5",-"drop6")
rm(demanda)
#Gerando e juntando tabela de contratos ao df anterior
pronaf <- read.csv(contratos,sep=";",dec=".")
df <- pronaf %>%
filter(estado=="DF")
x <- df %>%
group_by(estado) %>%
summarise(t.contratos=sum(as.numeric(total.contratos),na.rm=TRUE))
y <- df %>%
group_by(estado) %>%
summarise(v.totais=sum(as.numeric(valores.totais),na.rm=TRUE))
df <- right_join(x,y,by="estado")
df<- df %>%
mutate("ano"=2003) %>%
mutate("chave"='BRASILIA (DF)') %>%
mutate("municipio"='BRASILIA')
df<- df[,c(4,5,1,6,2,3)]
names(df) <- c("ano","chave","estado","municipio","total.contratos",
"valores.totais")
rm(x,y)
pronaf <- pronaf %>%
filter(estado!="DF")
pronaf <- rbind(pronaf,df)
df5 <- right_join(df4,pronaf,by="chave")
names(df5) <- c("ano","cod_mun","chave","q.dende","q.girassol","q.mamona",
"q.soja","h.dende","h.girassol","h.mamona","h.soja",
"v.dende","v.girassol","v.mamona","v.soja","s.dende",
"s.girassol","s.mamona","s.soja","d.bio","ano.y",
"estado","municipio","total.contratos","valores.totais")
b2003 <- df5 %>%
filter(cod_mun!="NA") %>%
select(-"ano.y",-"estado",-"municipio")
rm(df,df1,df2,df3,df4,df5,contratos,pronaf)
#Incluindo informações municipais
setwd ("E:/igorf/Documents/GitHub/dissertacao/dataset/base")
pibmun <- read.csv('pibmun.csv',sep=";",dec=",")
View(pibmun)
pibmun <- pibmun %>%
filter(ano==2003)
b2003 <- right_join(b2003,pibmun,by="cod_mun")
b2003 <- b2003 %>%
filter(chave.x!="NA") %>%
select(-"ano.y",-"chave.y",-"estado",-"municipio")
View(b2003)
View(b2003)
names(b2003) <- c("ano","cod_mun","chave","q.dende","q.girassol",
"q.mamona","q.soja","h.dende","h.girassol","h.mamona",
"h.soja","v.dende","v.girassol","v.mamona","v.soja",
"s.dende","s.girassol","s.mamona","s.soja","d.bio",
"total.contratos","valores.totais","regiao","cod_uf","uf",
"semiarido","vaba","vabi","vabs","vabadm","vabt",
"t","pib","pib.per.capta")
View(b2003)
View(b2003)
View(b2003)
b2003 <- b2003[,c(1,2,23,24,25,26,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,
19,20,21,22,27,28,29,30,31,32,33,34)]
View(b2003)
rm(pibmun)
#Inlcuindo amc----
amc <- read_excel("E:/igorf/Documents/GitHub/dissertacao/dataset/ibge/amc/AMC_1980_2010.xlsx",
col_name =c("municipio","cod_mun","amc"))
b2003 <- b2003 %>%
mutate(cod_mun=as.character(cod_mun))
b2003 <- right_join(b2003,amc,by="cod_mun")
b2003 <- b2003 %>%
filter(ano!="NA") %>%
select(-"municipio")
rm(amc)
#Deflacionando valores----
deflator <- read_excel("E:/igorf/Documents/GitHub/dissertacao/dataset/ipea/ipeadata[18-01-2021-09-33].xls")
x <- filter(deflator,ano==2003)
b2003 <- b2003 %>%
mutate(v.dende=(v.dende*(x$deflator))) %>%
mutate(v.girassol=(v.girassol*(x$deflator))) %>%
mutate(v.mamona=(v.mamona*(x$deflator))) %>%
mutate(v.soja=(v.soja*(x$deflator))) %>%
mutate(s.dende=(s.dende*(x$deflator))) %>%
mutate(s.girassol=(s.girassol*(x$deflator))) %>%
mutate(s.mamona=(s.mamona*(x$deflator))) %>%
mutate(s.soja=(s.soja*(x$deflator))) %>%
mutate(valores.totais=(valores.totais*(x$deflator))) %>%
mutate(vaba=(as.numeric(vaba)*(x$deflator))) %>%
mutate(vabi=(as.numeric(vabi)*(x$deflator))) %>%
mutate(vabs=(as.numeric(vabs)*(x$deflator))) %>%
mutate(vabadm=(as.numeric(vabadm)*(x$deflator))) %>%
mutate(vabt=(as.numeric(vabt)*(x$deflator))) %>%
mutate(t=(as.numeric(t)*(x$deflator))) %>%
mutate(pib=(as.numeric(pib)*(x$deflator))) %>%
mutate(pib.per.capta=(as.numeric(pib.per.capta)*(x$deflator)))
rm(x,deflator)
#Categorizando a variavel semiarido
b2003 <- b2003 %>%
mutate(semiarido=if_else(semiarido=="Sim",1,0))
View(b2003)
View(b2003)
b2003 <- b2003[,c(1,2,35,4,5,3,6,7,8,9,10,11,12,13,14,15,
16,17,18,19,20,21,22,23,24,25,26,27,28,
29,30,31,32,33,34)]
View(b2003)
#Incluindo estimativa populacional----
est_pop <- read_excel("E:/igorf/Documents/GitHub/dissertacao/dataset/ibge/est_pop/POP2003_TCU.xls",
skip = 5,col_name=c("uf","cod_uf","cod_mun","municipio","est_pop"))
est_pop <- est_pop %>%
mutate(municipio=toupper(municipio)) %>%
mutate(municipio=chartr("ÁÉÍÓÚÃÕÂÊÔÇ'-", "AEIOUAOAEOC  ",municipio)) %>%
mutate("chave"=str_c(municipio," ","(",uf,")") ) %>%
select("chave","est_pop")
b2003 <- right_join(b2003,est_pop,by="chave")
b2003 <- b2003 %>%
filter(ano!="NA")
View(est_pop)
rm(est_pop)
#Criando dummy polos----
polos <- read_csv2("E:/igorf/Documents/GitHub/dissertacao/dataset/projeto_polos/polos.csv")
polos$cod_mun <- as.character(polos$cod_mun)
b2003 <- full_join(b2003, polos, by = 'cod_mun')
b2003 <- b2003 %>%
mutate(dummy1 = ifelse(is.na(polo), 0, 1)) %>%
filter(ano!="NA") %>%
select(-"amc.y",-"chave.y",-"estado",-"municipio",-"polo")
#Criando dummy polos----
polos <- read_csv2('E:/igorf/Documents/GitHub/dissertacao/dataset/projeto_polos/projeto_polos/polos.csv')
polos <- read_csv('E:/igorf/Documents/GitHub/dissertacao/dataset/projeto_polos/projeto_polos/polos.csv')
polos <- read.csv2('E:/igorf/Documents/GitHub/dissertacao/dataset/projeto_polos/projeto_polos/polos.csv')
if(!require(dplyr))
install.packages("dplyr")
if(!require(stringr))
install.packages("stringr")
if(!require(readxl))
install.packages("readxl")
if(!require(tidyverse))
install.packages("tidyverse")
install.packages("tidyverse")
polos <- read_csv2('E:/igorf/Documents/GitHub/dissertacao/dataset/projeto_polos/projeto_polos/polos.csv')
rm(list=ls())
quit()
